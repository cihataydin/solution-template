name: CI-CD with Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Docker
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Step 3: Install Docker Compose
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version  # Verify Docker Compose installation

    # Step 4: Build and run the Docker Compose setup
    - name: Build and run Docker Compose
      run: |
        docker-compose --env-file src/Samarootan.Api/.env.docker -f ./src/Samarootan.Api/docker-compose.yml up --build -d

    # Step 5: Clean up
    - name: Stop and remove containers after tests
      run: docker-compose --env-file src/Samarootan.Api/.env.docker -f ./src/Samarootan.Api/docker-compose.yml down

    # Step 6: Log in to Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Step 7: Build and push Docker images with Docker Compose
    - name: Build and push Docker images with Docker Compose
      run: | 
        docker network inspect prometheus-net >/dev/null 2>&1 || docker network create prometheus-net
        docker volume inspect shared-logs >/dev/null 2>&1 || docker volume create shared-logs
        docker-compose --env-file src/Samarootan.Api/.env.docker -f ./src/Samarootan.Api/docker-compose.yml build
        docker-compose --env-file src/Samarootan.Api/.env.docker -f ./src/Samarootan.Api/docker-compose.yml push
    
    # Step 8: Trigger Render Deployment
    - name: Trigger Render Deployment
      if: success()
      run: |
        curl -X POST ${{ secrets.DEPLOY_HOOK }}